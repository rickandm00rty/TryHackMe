Burp 101 | Kyle Nelson | 03/17/2021
===================================

Burp Suite is used to intercept traffic through a local proxy so the traffic can be analyzed. This is useful to monitor packets for site operation, inject payloads, and gather further details about a site or service. Burp contains it's own built-in browser for navigating websites and capturing packets, but your own browser can be used as well. 

[Configuring your own Browser]:
- Install Foxy Proxy or other proxy extension. Create new proxy with HTTP://localhost:8080
- With proxy on, navigate to http://localhost:8080 with Burp Suite open. This will provide a download for the CA certificate needed
- Import CA Certificate to the browser you want to use

DONE!

[Burp Suite Basic Terminology]:
Proxy - What allows us to funnel traffic through Burp Suite for further analysis
Target - How we set the scope of our project. We can also use this to effectively create a site map of the application we are testing.
Intruder - Incredibly powerful tool for everything from field fuzzing to credential stuffing and more
Repeater - Allows us to 'repeat' requests that have previously been made with or without modification. Often used in a precursor step to fuzzing with the aforementioned Intruder
Sequencer - Analyzes the 'randomness' present in parts of the web app which are intended to be unpredictable. This is commonly used for testing session cookies
Decoder - As the name suggests, Decoder is a tool that allows us to perform various transforms on pieces of data. These transforms vary from decoding/encoding to various bases or URL encoding.
Comparer - Comparer as you might have guessed is a tool we can use to compare different responses or other pieces of data such as site maps or proxy histories (awesome for access control issue testing). This is very similar to the Linux tool diff.
Extender - Similar to adding mods to a game like Minecraft, Extender allows us to add components such as tool integrations, additional scan definitions, and more!
Scanner - Automated web vulnerability scanner that can highlight areas of the application for further manual investigation or possible exploitation with another section of Burp. This feature, while not in the community edition of Burp Suite, is still a key facet of performing a web application test.


[Basic Operation & Capture]:
Intercepting from the built-in browser will be on by default, so launch that and navigate to your site. Packets will be captured in 'Proxy > Intercept'. Each of these captures can be forwarded to the different Burp tools including Repeater, Encoder, Scanner, etc....This allows for robust testing of websites and quick iteration of payloads to see their different effects on the host. Each request/payload/URL captured will be saved in the 'Proxy > HTTP History' tab. 

Captures can also be filtered depending on the protocols involved with sending and receiving, allowing for more fine-tuned control of captured packets. It may be worth playing around with these if capturing large amounts of data. Also just makes things easier to read...It is important to note that having these filters on can allow you to still "Google" or do other tasks without running it through the Proxy - Simply filter by URL so Burp only captures from a specified URL!


[TARGET Capture]:
Target capture is sued to specify a specific URL or App and most importantly, it's scope of testing. This can include usernames, app weaknesses, Custom payloads, and many other options. Instead of capturing ALL data through a proxy, we can simply push payloads and information through specific channels in Target Mode. Targeting a website is analagous to scanning a book - Always start on page one and work your way up. There is no easy way to find the silver bullet - You will need to target all access points of the URL or App, not just the "main page". Essentially, manual reconnaissance of each aspect of the website. From there, Burp can scan and use vulnerabilities to attack those vectors. 

[REPEATER]:
This one is pretty easy....Instead of finding a payload that might work or areas of weakness like "Target Mode", Repeater allows for sending one command (with edits if needed) very easily. This is great for testing once you've found something you would like to exploit. Basic workflow is (Capture needed traffic from specific site > Analyze GET/POST Requests in "Proxy" > Send to "Repeater" > Adjust Command Parameters and Re-send)

[INTRUDER]:
Intruder is mainly used for automation once a vulnerability is found. Features include:
- Enumerating identifiers such as usernames, cycling through predictable session/password recovery tokens, and attempting simple password guessing
- Harvesting useful data from user profiles or other pages of interest via grepping our responses
- Fuzzing for vulnerabilities such as SQL injection, cross-site scripting (XSS), and file path traversal

To accomplish these various use cases, Intruder has four different attack types:

1. Sniper - The most popular attack type, this cycles through our selected positions, putting the next available payload (item from our wordlist) in each position in turn. This uses only one set of payloads (one wordlist).

2. Battering Ram - Similar to Sniper, Battering Ram uses only one set of payloads. Unlike Sniper, Battering Ram puts every payload into every selected position. Think about how a battering ram makes contact across a large surface with a single surface, hence the name battering ram for this attack type.

3. Pitchfork - The Pitchfork attack type allows us to use multiple payload sets (one per position selected) and iterate through both payload sets simultaneously. For example, if we selected two positions (say a username field and a password field), we can provide a username and password payload list. Intruder will then cycle through the combinations of usernames and passwords, resulting in a total number of combinations equalling the smallest payload set provided. 

4. Cluster Bomb - The Cluster Bomb attack type allows us to use multiple payload sets (one per position selected) and iterate through all combinations of the payload lists we provide. For example, if we selected two positions (say a username field and a password field), we can provide a username and password payload list. Intruder will then cycle through the combinations of usernames and passwords, resulting in a total number of combinations equalling usernames x passwords. Do note, this can get pretty lengthy if you are using the community edition of Burp. 


